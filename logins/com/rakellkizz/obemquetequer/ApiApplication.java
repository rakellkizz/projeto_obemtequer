package com.obemtequer;
import java.util.Scanner;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/**
 * Classe principal da aplicaÃ§Ã£o Spring Boot "O Bem Te Quer".
 *
 * Esta classe serve como ponto de entrada da aplicaÃ§Ã£o. Ao ser executada,
 * ela inicializa o contexto do Spring, configura automaticamente os componentes
 * necessÃ¡rios e inicia o servidor web embutido (como Tomcat).
 *
 * A anotaÃ§Ã£o {@code @SpringBootApplication} Ã© uma meta-anotaÃ§Ã£o que combina:
 * - {@code @Configuration}: Define a classe como uma fonte de beans do Spring.
 * - {@code @EnableAutoConfiguration}: Habilita a configuraÃ§Ã£o automÃ¡tica com base no classpath.
 * - {@code @ComponentScan}: Habilita a varredura de componentes nos pacotes.
 *
 * Desenvolvido por Raquel ğŸ’›
 */
@SpringBootApplication
public class ApiApplication {

    /**
     * MÃ©todo principal que inicializa a aplicaÃ§Ã£o Spring Boot e simula uma
     * conversa empÃ¡tica com o(a) usuÃ¡rio(a) no terminal.
     *
     * @param args Argumentos de linha de comando (opcional).
     */
    public static void main(String[] args) {
        // Inicia o contexto Spring Boot
        SpringApplication.run(ApiApplication.class, args);

        // Simula uma conversa simples no terminal com empatia
        iniciarConversaEmpatica();
    }

    /**
     * MÃ©todo auxiliar que conduz uma conversa acolhedora com o(a) usuÃ¡rio(a)
     * via terminal, baseado no sentimento informado.
     */
    public static void iniciarConversaEmpatica() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("âœ¨ Bem-vinda(o) ao Bem Te Quer âœ¨");

        // Solicita o nome do(a) usuÃ¡rio(a)
        System.out.print("Qual Ã© o seu nome? ");
        String nome = scanner.nextLine();

        // Solicita como o(a) usuÃ¡rio(a) estÃ¡ se sentindo
        System.out.print("Como vocÃª estÃ¡ se sentindo hoje, " + nome + "? ");
        String sentimento = scanner.nextLine().toLowerCase();

        // Gera e exibe uma resposta empÃ¡tica
        String resposta = analisarSentimento(sentimento, nome);
        System.out.println(resposta);
        System.out.println("\nğŸŒ¼ Um abraÃ§o carinhoso do Bem Te Quer ğŸŒ¼");

        scanner.close();
    }

    /**
     * Analisa o sentimento informado e retorna uma mensagem de acolhimento.
     *
     * @param sentimento Sentimento descrito pelo(a) usuÃ¡rio(a).
     * @param nome       Nome da pessoa, para personalizar a resposta.
     * @return Mensagem empÃ¡tica personalizada.
     */
    public static String analisarSentimento(String sentimento, String nome) {
        if (sentimento.contains("triste") || sentimento.contains("mal") || sentimento.contains("cansado") || sentimento.contains("sozinho")) {
            return "\nSinto muito por vocÃª estar se sentindo assim, " + nome + ".\nEstou aqui com vocÃª, e quero te lembrar que vocÃª nÃ£o estÃ¡ sozinho(a). ğŸ’›";

        } else if (sentimento.contains("ansioso") || sentimento.contains("preocupado")) {
            return "\nRespira fundo comigo, " + nome + ". TÃ¡ tudo bem sentir isso.\nVocÃª estÃ¡ fazendo o seu melhor, e isso jÃ¡ Ã© incrÃ­vel. ğŸŒ¿";

        } else if (sentimento.contains("feliz") || sentimento.contains("bem") || sentimento.contains("grato")) {
            return "\nQue maravilha ouvir isso, " + nome + "! ğŸ˜„\nFico muito feliz por vocÃª estar se sentindo assim. Aproveite cada instante!";

        } else {
            return "\nObrigado por compartilhar, " + nome + ".\nSe quiser conversar mais, estou aqui, tÃ¡ bem? ğŸ’™";
        }
    }
}
