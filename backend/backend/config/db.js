// ------------------------------------------------------------
// ARQUIVO: config/db.js
// ------------------------------------------------------------
// Respons√°vel por conectar ao MongoDB utilizando Mongoose.
// Suporta tanto conex√µes locais quanto com MongoDB Atlas.
// ------------------------------------------------------------

// -----------------------------
// IMPORTA√á√ÉO DE DEPEND√äNCIAS
// -----------------------------
const mongoose = require('mongoose');
require('dotenv').config(); // Carrega as vari√°veis do arquivo .env

// -----------------------------
// FUN√á√ÉO ASS√çNCRONA DE CONEX√ÉO
// -----------------------------
const connectDB = async () => {
  try {
    // Obt√©m a string de conex√£o do arquivo .env
    const mongoURI = process.env.MONGO_URI;

    // Valida se a vari√°vel de ambiente est√° definida
    if (!mongoURI) {
      throw new Error('‚ùå Vari√°vel MONGO_URI n√£o encontrada. Verifique seu arquivo .env');
    }

    // Tenta conectar ao MongoDB
    // As op√ß√µes useNewUrlParser e useUnifiedTopology foram removidas
    const conn = await mongoose.connect(mongoURI);

    // Se conectar com sucesso, exibe o host e database
    console.log('‚úÖ MongoDB conectado com sucesso!');
    console.log(`üì° Host: ${conn.connection.host}`);
    console.log(`üóÉÔ∏è  Database: ${conn.connection.name}`);

    // OPCIONAL: Monitora eventos do Mongoose
    mongoose.connection.on('disconnected', () => {
      console.warn('‚ö†Ô∏è  Conex√£o com o MongoDB foi perdida.');
    });

    mongoose.connection.on('error', err => {
      console.error('‚ùå Erro na conex√£o MongoDB:', err);
    });

  } catch (error) {
    // Em caso de erro na conex√£o, exibe e finaliza o processo
    console.error('‚ùå Erro ao conectar com o MongoDB:', error.message);
    process.exit(1); // Encerra a aplica√ß√£o com erro
  }
};

// -----------------------------
// EXPORTA√á√ÉO DA FUN√á√ÉO
// -----------------------------
// Permite que outros m√≥dulos usem connectDB()
module.exports = connectDB;
