# -------------------------------------------
# ARQUIVO .gitignore PARA PROJETOS NODE.JS
# -------------------------------------------

################################################################################
# DEPENDÊNCIAS E GERENCIADORES
################################################################################

# Pasta de dependências do Node.js
/node_modules

# Plug'n'Play (Pnp) do Yarn v2+
/.pnp
.pnp.js

# Lockfile do pnpm
pnpm-lock.yaml

################################################################################
# BUILD / DISTRIBUIÇÃO
################################################################################

# Saída de builds (Webpack, Next.js, Vite etc.)
/build
/dist
/out

# Cache de ferramentas
.cache/

################################################################################
# TESTES E COBERTURA
################################################################################

# Relatórios gerados por testes automatizados
/coverage

################################################################################
# LOGS E DEBUG
################################################################################

# Arquivos de log de erros
npm-debug.log*
yarn-debug.log*
yarn-error.log*

################################################################################
# VARIÁVEIS DE AMBIENTE (SENHAS / TOKENS)
################################################################################

# Arquivos .env usados para armazenar variáveis de ambiente
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

################################################################################
# SISTEMAS OPERACIONAIS / EDITORES
################################################################################

# macOS
.DS_Store

# Visual Studio Code
.vscode/

################################################################################
# RECOMENDAÇÕES GERAIS
################################################################################

# Você pode adicionar regras específicas para ignorar pastas dentro de subdiretórios
# Exemplo: /frontend/node_modules ou /backend/node_modules (não é necessário aqui pois /node_modules já cobre tudo)

################################################################################
# OBSERVAÇÃO FINAL
################################################################################

# Este .gitignore evita que arquivos sensíveis e desnecessários sejam enviados ao GitHub.
# ⚠️ Muito importante: sempre mantenha o arquivo .env fora do controle de versão!
# ⚠️ Nunca compartilhe suas credenciais ou tokens de acesso publicamente!
# ⚠️ Sempre revise o conteúdo do seu repositório antes de fazer um push para evitar vazamento de informações sensíveis.

*storybook.log
